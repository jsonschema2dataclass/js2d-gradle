name: Release Plugin

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+

concurrency:
  # Documentation suggests ${{ github.head_ref }}, but that's only available on pull_request/pull_request_target triggers, so using ${{ github.ref }}.
  # On master, we want all builds to complete even if merging happens faster to make it easier to discover at which point something broke.
  group: ${{ github.ref == 'refs/heads/main' && format('demo-agp7-ci-main-{0}', github.sha) || format('demo-agp7-ci-{0}', github.ref) }}
  cancel-in-progress: true

jobs:
  publish:
    name: Publish release
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install JDK 17
        uses: actions/setup-java@v3.11.0
        with:
          distribution: 'temurin'
          java-version: 17
          cache: gradle
      - name: Build project
        run: ./gradlew build --no-daemon
        env:
          VERSION: ${{ github.ref }}
      - name: Find Tag
        id: tagger
        uses: jimschubert/query-tag-action@v2
        with:
          skip-unshallow: 'true'
          commit-ish: HEAD
      - name: Create Github release
        run: |
          PRE_RELEASE=""
          if [[ ${{steps.tagger.outputs.tag}} == *"beta"* ]]; then
            PRE_RELEASE="-p"
          fi
          if [[ ${{steps.tagger.outputs.tag}} == *"alpha"* ]]; then
            PRE_RELEASE="-p"
          fi
          if [[ ${{steps.tagger.outputs.tag}} == *"rc"* ]]; then
            PRE_RELEASE="-p"
          fi
          set -x          
          hub release create $PRE_RELEASE -m "${{steps.tagger.outputs.tag}}" "${{steps.tagger.outputs.tag}}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{steps.tagger.outputs.tag}}
      - name: Publish
        uses: burrunan/gradle-cache-action@v1.19
        with:
          remote-build-cache-proxy-enabled: false
          properties: |
            gradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}
            gradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}
          arguments: publishPlugins -s --scan --no-daemon
