---
name: Release Plugin

on:
  push:
    tags:
    - v[0-9]+.[0-9]+.[0-9]+
    - v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  GRADLE_OPTS: -Dorg.gradle.internal.launcher.welcomeMessageEnabled=false

jobs:
  publish:
    name: Publish release
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
    - name: Install JDK 17
      uses: actions/setup-java@v5
      with:
        distribution: temurin
        java-version: 17
        cache: gradle
    - name: Build project
      run: ./gradlew build --no-daemon  -Porg.jsonschema2dataclass.internal.git-version=true
      env:
        VERSION: ${{ github.ref }}
    - name: Find Tag
      id: tagger
      uses: jimschubert/query-tag-action@v2
      with:
        skip-unshallow: 'true'
        commit-ish: HEAD
    - name: Create Github release
      run: |
        PRE_RELEASE=""
        if [[ ${{steps.tagger.outputs.tag}} == *"beta"* ]]; then
          PRE_RELEASE="-p"
        fi
        if [[ ${{steps.tagger.outputs.tag}} == *"alpha"* ]]; then
          PRE_RELEASE="-p"
        fi
        if [[ ${{steps.tagger.outputs.tag}} == *"rc"* ]]; then
          PRE_RELEASE="-p"
        fi
        set -x
        hub release create $PRE_RELEASE -m "${{steps.tagger.outputs.tag}}" "${{steps.tagger.outputs.tag}}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VERSION: ${{steps.tagger.outputs.tag}}
    - name: Publish
      uses: burrunan/gradle-cache-action@v3.0
      with:
        remote-build-cache-proxy-enabled: false
        properties: |
          gradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}
          gradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}
        arguments: publishPlugins -s --scan --no-daemon
